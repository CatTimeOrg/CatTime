@inherits LayoutComponentBase

@using CatTime.Frontend.Pages.Redirects
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager NavigationManager;
@inject CustomAuthenticationStateProvider AuthStateProvider;

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<AuthorizeView>
    <Authorized>
        <MudPaper Height="100vh" Style="overflow:hidden; position:relative;">
            <MudDrawerContainer Class="mud-height-full">
                <MudDrawer @bind-Open="@_open" Height="100vh" Fixed="false" Elevation="1" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true">
                    <MudNavMenu Style="height: 100%;">
                        <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Dashboard</MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Timer">Meine Zeiten</MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.EditCalendar">Urlaub</MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Logout" OnClick="Logout">Logout</MudNavLink>
                    </MudNavMenu>
                </MudDrawer>
                <div>
                    <RedirectToDashboard></RedirectToDashboard>
                    @Body
                </div>
            </MudDrawerContainer>
        </MudPaper>
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin></RedirectToLogin>
    </NotAuthorized>
</AuthorizeView>

@code
{
    private bool _open = false;

    private async void Logout()
    {
        await AuthStateProvider.SetTokenAsync(null);

        this.NavigationManager.NavigateTo("/login");
    }
}
